(use-modules (ice-9 receive))

(load-from-path "env.scm")

(define lepton-cli
  (build-filename *abs-top-builddir*
                  "utils"
                  "cli"
                  "src"
                  "lepton-cli"))

;;; Adjust LANG to avoid issues with localised output.  putenv is
;;; necessary for FreeBSD if the environment variable was not yet
;;; defined.
(putenv "LANG=C")


(define help-string "Usage: lepton-cli [OPTION...] COMMAND [ARGS ...]")

(define run-help-string "Run `lepton-cli --help' for more information.")


;;; Test lepton-cli without args.
(test-begin "lepton-cli")

(receive (<status> <stdout> <stderr>)
    (command-values lepton-cli)
  (test-eq EXIT_FAILURE <status>)
  (test-assert (string-contains <stderr> "ERROR: You must specify a command to run."))
  (test-assert (string-contains <stderr> run-help-string)))

(test-end "lepton-cli")


;;; Test it with --no-rcfiles but without any command.
(test-begin "lepton-cli --no-rcfiles")

(receive (<status> <stdout> <stderr>)
    (command-values lepton-cli "--no-rcfiles")
  (test-eq EXIT_FAILURE <status>)
  (test-assert (string-contains <stderr> "ERROR: You must specify a command to run."))
  (test-assert (string-contains <stderr> run-help-string)))

(test-end "lepton-cli --no-rcfiles")


(test-begin "lepton-cli -h")

(receive (<status> <stdout> <stderr>)
    (command-values lepton-cli "-h")
  (test-eq EXIT_SUCCESS <status>)
  (test-assert (string-contains <stdout> help-string)))

(test-end "lepton-cli -h")


(test-begin "lepton-cli --help")

(receive (<status> <stdout> <stderr>)
    (command-values lepton-cli "--help")
  (test-eq EXIT_SUCCESS <status>)
  (test-assert (string-contains <stdout> help-string)))

(test-end "lepton-cli --help")


(test-begin "lepton-cli -V")

(receive (<status> <stdout> <stderr>)
    (command-values lepton-cli "-V")
  (test-eq EXIT_SUCCESS <status>)
  (test-assert (string-contains <stdout> "Lepton EDA"))
  (test-assert (string-contains <stdout> "Copyright"))
  (test-assert (string-contains <stdout> "There is NO WARRANTY")))

(test-end "lepton-cli -V")


(test-begin "lepton-cli --version")

(receive (<status> <stdout> <stderr>)
    (command-values lepton-cli "--version")
  (test-eq EXIT_SUCCESS <status>)
  (test-assert (string-contains <stdout> "Lepton EDA"))
  (test-assert (string-contains <stdout> "Copyright"))
  (test-assert (string-contains <stdout> "There is NO WARRANTY")))

(test-end "lepton-cli --version")


(test-begin "lepton-cli wrong command")

(receive (<status> <stdout> <stderr>)
    (command-values lepton-cli "wrong" "command")
  (test-eq EXIT_FAILURE <status>)
  (test-assert (string-contains <stderr> "Unrecognised command"))
  (test-assert (string-contains <stderr> run-help-string)))

(test-end "lepton-cli wrong command")
