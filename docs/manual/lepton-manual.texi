\input texinfo
@c -*-texinfo-*-
@c %**start of header
@setfilename lepton-manual.info
@include version.texi
@documentencoding UTF-8
@settitle Lepton EDA Reference Manual @value{VERSION}
@c %**end of header

@copying
This manual documents Lepton EDA version @value{VERSION}.

Copyright @copyright{} 2020 Lepton Contributors.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A
copy of the license is included in the section entitled ``GNU Free
Documentation License.''
@end copying

@dircategory Engineering
@direntry
* Lepton EDA: (lepton-manual). Lepton EDA Reference Manual
@end direntry

@titlepage
@title Lepton EDA Reference Manual
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@setchapternewpage odd

@c Output contents.
@contents

@ifnottex
@node Top
@top Lepton EDA Reference Manual
@end ifnottex

@menu
* Overview:: Overview of program components.
* Installation:: Installation of the tool suite.
* Configuration:: Configuration system.
* lepton-schematic:: Lepton EDA schematic capture program.
* lepton-netlist:: Lepton EDA netlister.
* Communication:: Places for discussions and chatting.
* Development:: Useful information for developers.
* gEDA file format:: File format currently in use.

* Index::
@end menu

@node Overview
@chapter Overview
@cindex overview

Lepton EDA suite is a set of tools that provide schematic capture,
netlisting and export of schematics into several formats, which, in
turn, allows simulation via third party tools and producing PCBs.

Programs in the suite

Lepton EDA suite includes tools as follows:

@itemize
@item
lepton-schematic---the main GUI tool for schematic capture.
@item
lepton-attrib
@item
lepton-netlist---a tool for making netlists from command line
@item
lepton-cli---a CLI tool providing support of configuration, export, and shell.
@item
lepton-archive---project archivation utility
@item
lepton-tragesym---symbol generator
@item
lepton-sch2pcb
@item
lepton-cli
@item
lepton-embed
@item
lepton-netlist
@item
lepton-pcb_backannotate
@item
lepton-refdes_renum
@item
lepton-renum
@item
lepton-sch2pcb
@item
lepton-schdiff
@item
lepton-schematic
@item
lepton-symcheck
@item
lepton-symfix
@item
lepton-tragesym
@item
lepton-upcfg
@end itemize

The following contributed tools are not covered in this manual.
Mostly, those are for working with proprietary, often obsolete,
programs, so they are of limited use for most users.  Please see
corresponding man pages for more information.

@itemize
@item
convert_sym---convert a Viewlogic symbol/schematic to @ref{gEDA file
format}.
@item
gmk_sym---create rectangular symbols in @ref{gEDA file format} from a
text file.
@item
olib---OrCAD(tm) library part to gEDA .sym converter.
@item
sarlacc_schem---convert OrCAD SDT IV files to @ref{gEDA file format}.
@item
smash_megafile---break a Viewlogic megafile into a million little
pieces.
@item
gnet_hier_verilog.sh---generate a non-flattened hierarchical Verilog
netlist.
@item
pads_backannotate---process PADS PowerPCB .eco files to backannotate
changes to schematics in @ref{gEDA file format}.
@item
sw2asc---converts a SWITCAP2 output file into ASCII data files that
other tools can read.
@item
sch2eaglepos.sh---read a schematic in @ref{gEDA file format} and
attempt to extract the relative positions of the components in order
to generate corresponding MOVE instructions for Eagle.
@item
sarlacc_sym---convert OrCAD text libraries to components in @ref{gEDA file
format}.
@end itemize

The following contributed scripts are not covered in this manual
either.  They are pretty obsolete, non-documented, and usually do
trivial things:

@itemize
@item
gschupdate---update some deprecated attributes in old schematics (with
version 20020527 or earlier).
@item
gsymupdate---update some deprecated attributes in old symbols (with
version 20020527 or earlier).
@end itemize

@node Installation
@chapter Installation

Installation of Lepton is pretty simple on many operating systems and
distributions supporting pre-built binary packages.  Just use your
favorite package manager to install the package.  For example, on
Debian or Ubuntu, you could use @command{synaptic}, @command{apt-get},
or @command{aptitude} for installation.  It doesn't matter which
interface you use, GUI or CLI. For instance:
@example
sudo aptitude install lepton-eda
@end example

However, in some cases or on some systems you may want to install
Lepton from source code.  The order is as follows.
@itemize
@item
Download the source code:
@item
Compile it and install:
@example
cd the-directory-with-lepton-eda
autoreconf -ivf && ./configure && make && sudo make install
@end example
Call for @command{autoreconf} is not needed if you download sources as
a tarball of some version.
@item
In some cases, when, for example, a new library is installed, you may
need to launch @command{ldconfig} as well:
@example
sudo ldconfig
@end example
@end itemize

@node Dependencies
@section Dependencies

In order to compile Lepton from the distributed source archives, you
@strong{must} have the following tools and libraries installed:
@itemize
@item
A C/C++ compiler and standard library (@command{gcc}/@command{glibc}
are recommended, though you may use @command{clang} instead).
@item
@url{http://pkgconfig.freedesktop.org, The pkg-config tool} for
managing shared libraries.
@item
@url{http://www.gnu.org/software/guile, Guile} ("GNU's Ubiquitous
Intelligent Language for Extensions"), version 2.0.13 or later.
@item
@url{http://www.gtk.org, GTK+} (the Gimp Toolkit), version 2.24.0 or
later.
@item
@url{http://www.gnu.org/software/gettext, GNU gettext}, version 0.18
or newer.
@item
@url{http://flex.sourceforge.net, The lex tool} for generating lexical
scanners.  The @command{flex} implementation is recommended.
@item
The @command{awk} tool for data processing.
@url{http://www.gnu.org/software/gawk, GNU Awk} (@command{gawk}) is
recommended.
@end itemize

The following tools and libraries are @emph{highly recommended}:
@itemize
@item
@url{http://www.gnu.org/software/groff, GNU troff} (@command{groff}).
@item
@url{http://freedesktop.org/Software/shared-mime-info, The
freedesktop.org MIME info database}.
@item
@url{http://www.freedesktop.org/software/desktop-file-utils, The
freedesktop.org utilities} for manipulating @file{.desktop} files.
@end itemize

The following tools and libraries are optional:

@itemize
@item
@url{http://www.etla.net/libstroke, libstroke} a stroke and gesture
recognition library.  If this is available, @command{lepton-schematic}
will support mouse gesture recognition.
@end itemize

@node Troubleshooting dependencies
@section Troubleshooting dependencies

Sometimes, @code{./configure} says it cannot find a library while
the library is installed.  Really, it may just not find its headers
which live in a separate package.  Many modern operating system
distributions split a library into two packages:

@enumerate
@item
A package with binary files, say a @file{libfoo} package, which
contains the files necessary to @emph{run} programs which use
@file{libfoo}.
@item
A @dfn{development package}, @file{libfoo-dev} or @file{libfoo-devel},
which contains the files necessary to @emph{compile} programs which
use @file{libfoo}.
@end enumerate

If you're having problems, make sure that you have all of the
necessary development packages installed.


@node Installation from source
@section Installation from a source archive

First extract the archive to a sensible place:
@example
tar -xzvf lepton-eda-@value{VERSION}.tar.gz &&
cd lepton-eda-@value{VERSION}
@end example

Run the configuration script.  You'll probably want to specify a
custom directory to install Lepton EDA to, for example:
@example
./configure --prefix=$HOME/lepton
@end example

You can then compile Lepton:
@example
make
@end example

And install it (if you used a @option{--prefix} outside your
@env{$HOME} directory, you may need to run this as @emph{root}):

@example
make install
@end example

@node Installation from git
@section Installation from the git repository

Lepton uses the @command{git} version control system.  If you wish to
try out the very latest version of Lepton, you will need to install
some extra tools @emph{in addition to} the ones listed above:

@itemize
@item
The @url{http://git-scm.com, git version control tool}, version 1.6 or
newer.
@item
@url{http://www.gnu.org/software/automake, GNU Automake}, version
1.11.0 or newer.
@item
@url{http://www.gnu.org/software/autoconf, GNU Autoconf}, version 2.60
or newer.
@item
@url{http://www.gnu.org/software/libtool, GNU Libtool}.
@item
@url{http://www.gnu.org/software/texinfo, GNU Texinfo documentation
system}.

Note that on some distributions the @TeX{} support for Texinfo is
packaged separately.
@end itemize

Once you have these installed, you need to clone the Lepton git
repository:

@example
git clone https://github.com/lepton-eda/lepton-eda.git
@end example

To generate the configure script, run:

@example
autoreconf -ivf
@end example

You can then proceed to configure and build Lepton as described above.

@include configuration.texi
@include lepton-schematic.texi
@include lepton-netlist.texi
@include communication.texi
@include development.texi
@include geda-file-format-spec.texi

@node Index
@unnumbered Index
@printindex cp

@bye
